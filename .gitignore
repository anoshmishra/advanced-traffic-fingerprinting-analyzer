<<<<<<< HEAD
# ============================================================================
# ENCRYPTED TRAFFIC FINGERPRINTING ANALYZER - .gitignore
# ============================================================================

# ============================================================================
# PYTHON CORE
# ============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
=======
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]
>>>>>>> 9b9354ac51f0d48b31aebfa9bf179a13d40ed144
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
<<<<<<< HEAD
pip-wheel-metadata/
=======
>>>>>>> 9b9354ac51f0d48b31aebfa9bf179a13d40ed144
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

<<<<<<< HEAD
# ============================================================================
# VIRTUAL ENVIRONMENTS
# ============================================================================

# Virtual environments (all common names)
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
pyvenv.cfg

# Conda environments
.conda/
conda-meta/

# ============================================================================
# PROJECT-SPECIFIC DATA & RESULTS
# ============================================================================

# Large datasets and raw data (keep structure, ignore content)
data/raw_pcaps/*.pcap
data/raw_pcaps/*.pcapng
data/datasets/large_*
data/datasets/*.csv
data/datasets/*.json
data/processed/temp_*
data/processed/*.csv
data/processed/*.pkl

# Generated models (these are large binary files)
results/models/*.joblib
results/models/*.pkl
results/models/*.h5
results/models/*.pt
results/models/*.onnx

# Generated plots and visualizations
results/plots/*.png
results/plots/*.jpg
results/plots/*.svg
results/plots/*.pdf

# Generated reports (keep templates, ignore generated)
results/reports/*.html
results/reports/*.pdf
results/reports/*.json
results/reports/ANALYSIS_*
results/reports/TECHNICAL_*
results/reports/ENHANCED_*
results/reports/AUTOMATED_*
results/reports/VULN_SCAN_*

# Keep report templates
!reports/templates/
!reports/templates/*.html

# ============================================================================
# LOGS AND TEMPORARY FILES
# ============================================================================

# Log files
logs/
*.log
*.log.*
log/
project.log

# Temporary files
temp/
tmp/
cache/
.cache/
*.tmp
*.temp
*.swp
*.swo
*~

# ============================================================================
# JUPYTER NOTEBOOKS
# ============================================================================

# Jupyter Notebook checkpoints
.ipynb_checkpoints
*/.ipynb_checkpoints/*

# Jupyter Notebook outputs (optional - uncomment if you want to ignore outputs)
# *.ipynb

# ============================================================================
# IDE AND EDITOR FILES
# ============================================================================

# Visual Studio Code
.vscode/
*.code-workspace
.history/

# PyCharm
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# Vim
*.swp
*.swo
.vimrc

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# VS Code
.vscode/
*.code-workspace

# ============================================================================
# OPERATING SYSTEM FILES
# ============================================================================

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
.fseventsd
.TemporaryItems
.VolumeIcon.icns
.AppleDouble
.LSOverride

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.nfs*

# ============================================================================
# TESTING AND COVERAGE
# ============================================================================
=======
# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt
>>>>>>> 9b9354ac51f0d48b31aebfa9bf179a13d40ed144

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
<<<<<<< HEAD
*.py,cover
=======
*.py.cover
>>>>>>> 9b9354ac51f0d48b31aebfa9bf179a13d40ed144
.hypothesis/
.pytest_cache/
cover/

<<<<<<< HEAD
# ============================================================================
# SECURITY AND SENSITIVE DATA
# ============================================================================

# Environment variables and secrets
*.env
.env.*
!.env.example
secrets/
credentials/
private_keys/

# API keys and credentials
*api_key*
*secret*
*password*
*credentials*
config_local.*
local_settings.py

# SSL certificates and keys
*.key
*.pem
*.crt
*.p12
*.pfx

# Database files
*.db
*.sqlite
*.sqlite3

# ============================================================================
# NETWORK AND SECURITY TOOLS
# ============================================================================

# Captured network traffic (sensitive data)
*.pcap
*.pcapng
*.cap
traffic_captures/
network_dumps/

# Nmap output files
*.nmap
*.gnmap
*.xml

# Burp Suite files
*.burp
burp_*

# Wireshark files
*.pcapng
*.pcap

# ============================================================================
# MACHINE LEARNING AND DATA SCIENCE
# ============================================================================

# Model checkpoints
checkpoints/
*.ckpt
checkpoint

# TensorFlow
*.pb
saved_model/
tensorflow_logs/

# PyTorch
*.pth
*.pt

# Scikit-learn
*.joblib
*.pkl

# MLflow
mlruns/
mlartifacts/

# Weights & Biases
wandb/

# ============================================================================
# BUILD AND PACKAGING
# ============================================================================

# Build artifacts
build/
dist/
*.egg-info/

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# ============================================================================
# DOCUMENTATION
# ============================================================================

# Sphinx documentation
docs/_build/
docs/build/
target/

# mkdocs documentation
/site

# ============================================================================
# MISC FILES
# ============================================================================

# Archive files
*.zip
*.tar.gz
*.rar
*.7z

# Backup files
*.bak
*.backup
*~

# Large files
*.iso
*.dmg

# ============================================================================
# PROJECT-SPECIFIC EXCLUSIONS
# ============================================================================

# Config files with sensitive data
configs/config_production.yaml
configs/local_config.yaml
configs/*_secret*

# Exclude large example datasets but keep structure
data/examples/large_*
data/samples/*.pcap

# Exclude user-specific GUI settings
gui_settings.json
user_preferences.json

# Exclude generated documentation
docs/generated/
docs/api_docs/

# Performance profiling results
*.prof
profiling_results/

# ============================================================================
# EXCEPTIONS (Files to KEEP even if they match patterns above)
# ============================================================================

# Keep essential config templates
!configs/config.yaml.template
!configs/config.yaml.example

# Keep sample data that's small
!data/samples/small_sample.pcap

# Keep documentation assets
!docs/images/
!docs/screenshots/
!assets/

# Keep essential scripts
!scripts/
!*.sh
!*.bat

# ============================================================================
# END OF .gitignore
# ============================================================================

=======
# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Abstra
# Abstra is an AI-powered process automation framework.
# Ignore directories containing user credentials, local state, and settings.
# Learn more at https://abstra.io/docs
.abstra/

# Visual Studio Code
#  Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore 
#  that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#  and can be added to the global gitignore or merged into this file. However, if you prefer, 
#  you could uncomment the following to ignore the entire vscode folder
# .vscode/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Cursor
#  Cursor is an AI-powered code editor. `.cursorignore` specifies files/directories to
#  exclude from AI features like autocomplete and code analysis. Recommended for sensitive data
#  refer to https://docs.cursor.com/context/ignore-files
.cursorignore
.cursorindexingignore

# Marimo
marimo/_static/
marimo/_lsp/
__marimo__/
>>>>>>> 9b9354ac51f0d48b31aebfa9bf179a13d40ed144
